@model TechTest_KawanLama.ViewModels.ToDoViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>ToDo</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly"></div>

            <table class="table">
                <thead>
                    <tr>
                        <th>Subject</th>
                        <th>Description</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="table_data">
                    <tr>
                        <td>
                            <label asp-for="TodoViewModel[0].Subject" class="control-label" id="lblSubject"></label>
                            <input asp-for="TodoViewModel[0].Subject" class="form-control" id="iSubject" />
                            <span asp-validation-for="TodoViewModel[0].Subject" class="text-danger"></span>
                        </td>
                        <td>
                            <label asp-for="TodoViewModel[0].Description" class="control-label" id="lblDescription"></label>
                            <input asp-for="TodoViewModel[0].Description" class="form-control" id="iDescription" />
                            <span asp-validation-for="TodoViewModel[0].Description" class="text-danger"></span>
                        </td>
                        <td>
                            <button type="button" class="btn btn-secondary" onclick="addNewRow()">Add Row</button>
                        </td>
                    </tr>
                </tbody>
            </table>

            <button type="submit" class="btn btn-primary">Insert</button>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    var i = 1;
    function addNewRow() {
        var table = document.getElementById("table_data");
        var row = table.insertRow(-1);

        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);

        cell1.innerHTML = '<label class="control-label" id="lblSubject' + i + '" for="TodoViewModel_' + i + '__Subject">Subject</label>' +
            '<input class="form-control valid" id="iSubject' + i + '" type="text" data-val="true" data-val-required="The Subject field is required." name="TodoViewModel[' + i + '].Subject" value="" aria-describedby="iSubject' + i + '-error" aria-invalid="false">' +
            '<span class="text-danger field-validation-valid" data-valmsg-for="TodoViewModel[' + i + '].Subject" data-valmsg-replace="true"></span>';
        cell2.innerHTML = '<label class="control-label" id="lblDescription' + i + '" for="TodoViewModel_' + i + '__Description">Description</label>' +
            '<input class="form-control valid" id="iDescription' + i + '" type="text" data-val="true" data-val-required="The Description field is required." name="TodoViewModel[' + i + '].Description" value="" aria-describedby="iDescription-error" aria-invalid="false">' +
            '<span class="text-danger field-validation-valid" data-valmsg-for="TodoViewModel[' + i + '].Description" data-valmsg-replace="true"></span>';
        cell3.innerHTML = '<button type="button" onclick="removeRow(this)">Remove</button>';

        i++;
    }

    function removeRow(button) {
        var row = button.parentNode.parentNode;
        row.parentNode.removeChild(row);
        i--;
    }
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
